{"version":3,"file":"passkey.js","sourceRoot":"","sources":["../../../../../../src/components/auth/card/loading/passkey.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,uCAAuC,CAAC;AACzE,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAC;AAC9D,OAAO,EAAE,EAAE,EAAE,MAAM,wBAAwB,CAAC;AAC5C,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,gBAAgB,EAAE,MAAM,iCAAiC,CAAC;AACnE,OAAO,EAAE,eAAe,EAAE,MAAM,8BAA8B,CAAC;AAE/D,MAAM,CAAC,MAAM,kBAAkB,GAAG,GAAG,EAAE;IACrC,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,cAAc,CAAC,gBAAgB,CAAC,CAAC;IACnE,MAAM,EAAE,YAAY,EAAE,GAAG,gBAAgB,EAAE,CAAC;IAE5C,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;QACnB,OAAO,CACL,KAAC,eAAe,IACd,UAAU,EAAE,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,EAC5C,QAAQ,EAAE,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,EACzC,IAAI,EAAE,KAAC,gBAAgB,KAAG,EAC1B,cAAc,EAAE,YAAY,EAC5B,sBAAsB,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,GAC9D,CACH,CAAC;IACJ,CAAC;IAED,OAAO,CACL,eAAK,SAAS,EAAC,mCAAmC,aAChD,cAAK,SAAS,EAAC,gDAAgD,YAC7D,KAAC,cAAc,KAAG,GACd,EAEN,aAAI,SAAS,EAAC,4BAA4B,YAAE,EAAE,CAAC,cAAc,CAAC,KAAK,GAAM,EACzE,YAAG,SAAS,EAAC,uCAAuC,YACjD,EAAE,CAAC,cAAc,CAAC,IAAI,GACrB,EAEJ,cAAK,SAAS,EAAC,yCAAyC,GAUlD,EACN,iBACE,SAAS,EAAC,yCAAyC,EACnD,OAAO,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,uBAGxC,IACL,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { ConnectionFailed } from \"../../../../icons/connectionFailed.js\";\nimport { LoadingPasskey } from \"../../../../icons/passkey.js\";\nimport { ls } from \"../../../../strings.js\";\nimport { useAuthContext } from \"../../context.js\";\nimport { usePasskeyVerify } from \"../../hooks/usePasskeyVerify.js\";\nimport { ConnectionError } from \"../error/connection-error.js\";\n\nexport const LoadingPasskeyAuth = () => {\n  const { setAuthStep, authStep } = useAuthContext(\"passkey_verify\");\n  const { authenticate } = usePasskeyVerify();\n\n  if (authStep.error) {\n    return (\n      <ConnectionError\n        headerText={ls.error.connection.passkeyTitle}\n        bodyText={ls.error.connection.passkeyBody}\n        icon={<ConnectionFailed />}\n        handleTryAgain={authenticate}\n        handleUseAnotherMethod={() => setAuthStep({ type: \"initial\" })}\n      />\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col w-full items-center\">\n      <div className=\"flex flex-col items-center justify-center mb-5\">\n        <LoadingPasskey />\n      </div>\n\n      <h3 className=\"font-semibold text-lg mb-2\">{ls.loadingPasskey.title}</h3>\n      <p className=\"text-fg-secondary text-center text-sm\">\n        {ls.loadingPasskey.body}\n      </p>\n\n      <div className=\"flex flex-col w-full items-center gap-1\">\n        {/* Hidden until we can read in support URLs from the config */}\n        {/* <div className=\"flex items-center justify-center py-2 gap-x-1\">\n          <p className=\"text-fg-tertiary text-xs\">\n            {ls.loadingPasskey.supportText}\n          </p>\n          <Button variant=\"link\" className=\"text-xs font-normal underline\">\n            {ls.loadingPasskey.supportLink}\n          </Button>\n        </div> */}\n      </div>\n      <button\n        className=\"akui-btn akui-btn-secondary w-full mt-5\"\n        onClick={() => setAuthStep({ type: \"initial\" })}\n      >\n        Cancel\n      </button>\n    </div>\n  );\n};\n"]}