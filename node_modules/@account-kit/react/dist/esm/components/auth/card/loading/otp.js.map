{"version":3,"file":"otp.js","sourceRoot":"","sources":["../../../../../../src/components/auth/card/loading/otp.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { EmailIllustration } from \"../../../../icons/illustrations/email.js\";\nimport { ls } from \"../../../../strings.js\";\nimport {\n  OTPInput,\n  type OTPCodeType,\n  initialOTPValue,\n  isOTPCodeType,\n} from \"../../../otp-input/otp-input.js\";\nimport { Spinner } from \"../../../../icons/spinner.js\";\nimport { AuthStepStatus, useAuthContext } from \"../../context.js\";\nimport { useAuthenticate } from \"../../../../hooks/useAuthenticate.js\";\nimport { useSignerStatus } from \"../../../../hooks/useSignerStatus.js\";\n\nconst AUTH_DELAY = 1000;\n\nexport const LoadingOtp = () => {\n  const { isConnected } = useSignerStatus();\n  const { setAuthStep, authStep } = useAuthContext(\"otp_verify\");\n  const [otpCode, setOtpCode] = useState<OTPCodeType>(initialOTPValue);\n  const [errorText, setErrorText] = useState(authStep.error?.message || \"\");\n  const [titleText, setTitleText] = useState(ls.loadingOtp.title);\n\n  const resetOTP = (errorText = \"\") => {\n    setOtpCode(initialOTPValue);\n    setErrorText(errorText);\n    setTitleText(ls.loadingOtp.title);\n  };\n  const { authenticate } = useAuthenticate({\n    onError: (error: any) => {\n      console.error(error);\n\n      setAuthStep({ ...authStep, error, status: AuthStepStatus.base });\n      resetOTP(getUserErrorMessage(error));\n    },\n    onSuccess: () => {\n      if (isConnected) {\n        setAuthStep({ ...authStep, status: AuthStepStatus.success });\n        setTitleText(ls.loadingOtp.verified);\n\n        // Wait 3 seconds before completing the auth step\n        setTimeout(() => {\n          setAuthStep({ type: \"complete\" });\n        }, AUTH_DELAY);\n      }\n    },\n  });\n\n  const setValue = (otpCode: OTPCodeType) => {\n    setOtpCode(otpCode);\n    if (isOTPCodeType(otpCode)) {\n      const otp = otpCode.join(\"\");\n\n      setAuthStep({ ...authStep, status: AuthStepStatus.verifying });\n      setTitleText(ls.loadingOtp.verifying);\n      authenticate({ type: \"otp\", otpCode: otp });\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <div className=\"relative h-12 w-12 mb-5\">\n        <Spinner className=\"absolute\" />\n        <EmailIllustration\n          height=\"32\"\n          width=\"32\"\n          className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2\"\n        />\n      </div>\n      <h3 className=\"text-fg-primary font-semibold text-lg mb-2\">\n        {titleText}\n      </h3>\n      <p className=\"text-fg-secondary text-center text-sm mb-1\">\n        {ls.loadingOtp.body}\n      </p>\n      <p className=\"text-fg-primary text-center text-sm font-medium mb-5\">\n        {authStep.email}\n      </p>\n      <OTPInput\n        disabled={authStep.status === AuthStepStatus.verifying}\n        value={otpCode}\n        setValue={setValue}\n        setErrorText={setErrorText}\n        errorText={errorText}\n        handleReset={resetOTP}\n        isVerified={authStep.status === AuthStepStatus.success}\n      />\n    </div>\n  );\n};\n\nfunction getUserErrorMessage(error: Error | undefined): string {\n  if (!error) {\n    return \"\";\n  }\n  // Errors from Alchemy have a JSON message.\n  try {\n    const message = JSON.parse(error.message).error;\n    if (message === \"invalid OTP code\") {\n      return ls.error.otp.invalid;\n    }\n    return message;\n  } catch (e) {\n    // Ignore\n  }\n  return error.message;\n}\n"]}