import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Fragment } from "react";
import { useAuthConfig } from "../../../hooks/internal/useAuthConfig.js";
import { Divider } from "../../divider.js";
import { useAuthContext } from "../context.js";
import { AuthSection } from "../sections/AuthSection.js";
import { GeneralError } from "./error/general-error.js";
export const MainAuthContent = () => {
    const { authStep } = useAuthContext();
    const isError = authStep.type === "initial" && authStep.error;
    const { header, sections, hideSignInText } = useAuthConfig(({ header, sections, hideSignInText }) => ({
        header,
        sections,
        hideSignInText,
    }));
    return (_jsxs(_Fragment, { children: [header, !hideSignInText && _jsx("h3", { className: "font-semibold text-lg", children: "Sign in" }), isError && _jsx(GeneralError, {}), sections?.map((section, idx) => {
                return (_jsxs(Fragment, { children: [_jsx(AuthSection, { authTypes: section }, `auth-section-${idx}`), idx !== sections.length - 1 ? (_jsx(Divider, {}, `divider-${idx}`)) : null] }, `auth-section-fragment-${idx}`));
            })] }));
};
//# sourceMappingURL=main.js.map