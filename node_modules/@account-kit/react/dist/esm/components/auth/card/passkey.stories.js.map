{"version":3,"file":"passkey.stories.js","sourceRoot":"","sources":["../../../../../src/components/auth/card/passkey.stories.tsx"],"names":[],"mappings":";AACA,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,KAAK,CAAC;AACzC,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,MAAM,+BAA+B,CAAC;AAC5D,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEvC,MAAM,YAAY,GAAG,CAAC,KAAU,EAAE,EAAE;IAClC,MAAM,EAAE,YAAY,EAAE,GAAG,WAAW,CAAC,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;QAC1D,YAAY;KACb,CAAC,CAAC,CAAC;IAEJ,IAAI,QAAQ,GAAiB,CAAC,CAAC,EAAE,IAAI,EAAE,SAAkB,EAAE,CAAC,CAAC,CAAC;IAE9D,MAAM,EAAE,GAAG;QACT,KAAK,EAAE,MAAM;QACb,YAAY,EAAE;YACZ,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,SAAS;SAChB;QACD,YAAY,EAAE,IAAI;QAClB,iBAAiB,EAAE,SAAS;QAC5B,SAAS,EAAE,SAAS;QACpB,QAAQ,EAAE,SAAS;KACpB,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,QAAQ,GAAG;YACf,IAAI,EAAE;gBACJ,SAAS,EAAE,IAAI;gBACf,mBAAmB,EAAE,KAAK;gBAC1B,WAAW,EAAE,IAAI;gBACjB,UAAU,EAAE,IAAI;gBAChB,QAAQ;aACT;YACD,EAAE;YACF,UAAU,EAAE,GAAG;SAChB,CAAC;QAEF,YAAY,CAAC,QAAQ,CAAC,CAAC;QACvB,uDAAuD;IACzD,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;IAErB,MAAM,EAAE,WAAW,EAAE,GAAG,cAAc,EAAE,CAAC;IACzC,SAAS,CAAC,GAAG,EAAE;QACb,WAAW,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC,CAAC;QACxC,uDAAuD;IACzD,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,KAAC,QAAQ,OAAK,KAAK,GAAI,CAAC;AACjC,CAAC,CAAC;AAEF,MAAM,IAAI,GAA8B;IACtC,KAAK,EAAE,SAAS;IAChB,SAAS,EAAE,YAAY;IACvB,IAAI,EAAE;QACJ,QAAQ,EAAE,SAAS;KACpB;IAED,UAAU,EAAE;QACV,GAAG,EAAE;YACH,QAAQ,EAAE;gBACR,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE,GAAG,EAAE;oBAC1C,OAAO,YAAY,CAAC,IAAI,CAAC;wBACvB,KAAK,EAAE,sCAAsC;qBAC9C,CAAC,CAAC;gBACL,CAAC,CAAC;aACH;SACF;KACF;CACF,CAAC;AACF,eAAe,IAAI,CAAC;AAGpB,MAAM,CAAC,MAAM,OAAO,GAAU,EAAE,CAAC","sourcesContent":["import type { Meta, StoryObj } from \"@storybook/react\";\nimport { http, HttpResponse } from \"msw\";\nimport { useEffect } from \"react\";\nimport { useUiConfig } from \"../../../hooks/useUiConfig.js\";\nimport { useAuthContext } from \"../context.js\";\nimport type { AuthType } from \"../types.js\";\nimport { AuthCard } from \"./index.jsx\";\n\nconst PasskeyStory = (props: any) => {\n  const { updateConfig } = useUiConfig(({ updateConfig }) => ({\n    updateConfig,\n  }));\n\n  let sections: AuthType[][] = [[{ type: \"passkey\" as const }]];\n\n  const ui = {\n    theme: \"dark\",\n    primaryColor: {\n      light: \"red\",\n      dark: \"#9AB7FF\",\n    },\n    borderRadius: \"sm\",\n    illustrationStyle: \"outline\",\n    logoLight: undefined,\n    logoDark: undefined,\n  };\n\n  useEffect(() => {\n    const uiConfig = {\n      auth: {\n        showEmail: true,\n        showExternalWallets: false,\n        showPasskey: true,\n        addPasskey: true,\n        sections,\n      },\n      ui,\n      supportUrl: \"#\",\n    };\n\n    updateConfig(uiConfig);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.authType]);\n\n  const { setAuthStep } = useAuthContext();\n  useEffect(() => {\n    setAuthStep({ type: \"passkey_create\" });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <AuthCard {...props} />;\n};\n\nconst meta: Meta<typeof PasskeyStory> = {\n  title: \"Passkey\",\n  component: PasskeyStory,\n  args: {\n    authType: \"passkey\",\n  },\n\n  parameters: {\n    msw: {\n      handlers: [\n        http.post(\"/api/rpc/signer/v1/lookup\", () => {\n          return HttpResponse.json({\n            orgId: \"483c1263-a6e3-4db1-a8b0-894e4902e404\",\n          });\n        }),\n      ],\n    },\n  },\n};\nexport default meta;\n\ntype Story = StoryObj<typeof AuthCard>;\nexport const Default: Story = {};\n"]}