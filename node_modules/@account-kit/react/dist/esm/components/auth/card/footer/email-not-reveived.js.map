{"version":3,"file":"email-not-reveived.js","sourceRoot":"","sources":["../../../../../../src/components/auth/card/footer/email-not-reveived.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACrD,OAAO,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAC;AACvE,OAAO,EAAE,EAAE,EAAE,MAAM,wBAAwB,CAAC;AAC5C,OAAO,EACL,cAAc,EACd,cAAc,GAEf,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AAK5C,MAAM,CAAC,MAAM,0BAA0B,GAAG,CAAC,EACzC,QAAQ,GACwB,EAAE,EAAE;IACpC,MAAM,EAAE,WAAW,EAAE,GAAG,cAAc,EAAE,CAAC;IACzC,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtD,MAAM,EAAE,YAAY,EAAE,GAAG,eAAe,CAAC;QACvC,SAAS,EAAE,GAAG,EAAE;YACd,WAAW,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;QACpC,CAAC;KACF,CAAC,CAAC;IAEH,MAAM,cAAc,GAAG,OAAO,CAAC,GAAG,EAAE;QAClC,OAAO,CACL,QAAQ,CAAC,IAAI,KAAK,YAAY;YAC9B,CAAC,QAAQ,CAAC,MAAM,KAAK,cAAc,CAAC,SAAS;gBAC3C,QAAQ,CAAC,MAAM,KAAK,cAAc,CAAC,OAAO,CAAC,CAC9C,CAAC;IACJ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEf,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,WAAW,EAAE,CAAC;YAChB,gDAAgD;YAChD,UAAU,CAAC,GAAG,EAAE;gBACd,cAAc,CAAC,KAAK,CAAC,CAAC;YACxB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC;IACH,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;IAElB,OAAO,CACL,eAAK,SAAS,EAAC,yCAAyC,aACtD,eACE,SAAS,EAAE,GACT,cAAc,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,kBACxC,UAAU,YAET,EAAE,CAAC,YAAY,CAAC,gBAAgB,GAC5B,EACP,KAAC,MAAM,IACL,OAAO,EAAC,MAAM,EACd,SAAS,EAAE,iCACT,cAAc;oBACZ,CAAC,CAAC,uCAAuC;oBACzC,CAAC,CAAC,kBACN,EAAE,EACF,QAAQ,EAAE,WAAW,IAAI,cAAc,EACvC,OAAO,EAAE,GAAG,EAAE;oBACZ,YAAY,CAAC;wBACX,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,QAAQ,CAAC,KAAK;wBACrB,SAAS,EAAE,QAAQ,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK;qBAClE,CAAC,CAAC;oBACH,cAAc,CAAC,IAAI,CAAC,CAAC;gBACvB,CAAC,YAEA,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,GACvD,IACL,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport { useAuthenticate } from \"../../../../hooks/useAuthenticate.js\";\nimport { ls } from \"../../../../strings.js\";\nimport {\n  AuthStepStatus,\n  useAuthContext,\n  type AuthStep,\n} from \"../../context.js\";\nimport { Button } from \"../../../button.js\";\n\ntype EmailNotReceivedDisclaimerProps = {\n  authStep: Extract<AuthStep, { type: \"email_verify\" | \"otp_verify\" }>;\n};\nexport const EmailNotReceivedDisclaimer = ({\n  authStep,\n}: EmailNotReceivedDisclaimerProps) => {\n  const { setAuthStep } = useAuthContext();\n  const [emailResent, setEmailResent] = useState(false);\n  const { authenticate } = useAuthenticate({\n    onSuccess: () => {\n      setAuthStep({ type: \"complete\" });\n    },\n  });\n\n  const isOTPVerifying = useMemo(() => {\n    return (\n      authStep.type === \"otp_verify\" &&\n      (authStep.status === AuthStepStatus.verifying ||\n        authStep.status === AuthStepStatus.success)\n    );\n  }, [authStep]);\n\n  useEffect(() => {\n    if (emailResent) {\n      // set the text back to \"Resend\" after 2 seconds\n      setTimeout(() => {\n        setEmailResent(false);\n      }, 2000);\n    }\n  }, [emailResent]);\n\n  return (\n    <div className=\"flex flex-row gap-2 justify-center mb-2\">\n      <span\n        className={`${\n          isOTPVerifying ? \"text-fg-disabled\" : \"text-fg-tertiary\"\n        } text-xs`}\n      >\n        {ls.loadingEmail.emailNotReceived}\n      </span>\n      <Button\n        variant=\"link\"\n        className={`text-xs font-normal underline ${\n          isOTPVerifying\n            ? \"text-fg-disabled disabled:opacity-100\"\n            : \"text-btn-primary\"\n        }`}\n        disabled={emailResent || isOTPVerifying}\n        onClick={() => {\n          authenticate({\n            type: \"email\",\n            email: authStep.email,\n            emailMode: authStep.type === \"email_verify\" ? \"magicLink\" : \"otp\",\n          });\n          setEmailResent(true);\n        }}\n      >\n        {emailResent ? ls.loadingEmail.resent : ls.loadingEmail.resend}\n      </Button>\n    </div>\n  );\n};\n"]}