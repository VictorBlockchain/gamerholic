{"version":3,"file":"main.js","sourceRoot":"","sources":["../../../../../src/components/auth/card/main.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAAE,aAAa,EAAE,MAAM,0CAA0C,CAAC;AACzE,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAC3C,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAC/C,OAAO,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AACzD,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAExD,MAAM,CAAC,MAAM,eAAe,GAAG,GAAG,EAAE;IAClC,MAAM,EAAE,QAAQ,EAAE,GAAG,cAAc,EAAE,CAAC;IACtC,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,KAAK,SAAS,IAAI,QAAQ,CAAC,KAAK,CAAC;IAC9D,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,cAAc,EAAE,GAAG,aAAa,CACxD,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,cAAc,EAAE,EAAE,EAAE,CAAC,CAAC;QACzC,MAAM;QACN,QAAQ;QACR,cAAc;KACf,CAAC,CACH,CAAC;IAEF,OAAO,CACL,8BACG,MAAM,EACN,CAAC,cAAc,IAAI,aAAI,SAAS,EAAC,uBAAuB,wBAAa,EACrE,OAAO,IAAI,KAAC,YAAY,KAAG,EAC3B,QAAQ,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,GAAG,EAAE,EAAE;gBAC9B,OAAO,CACL,MAAC,QAAQ,eACP,KAAC,WAAW,IAA6B,SAAS,EAAE,OAAO,IAAzC,gBAAgB,GAAG,EAAE,CAAwB,EAC9D,GAAG,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAC7B,KAAC,OAAO,MAAM,WAAW,GAAG,EAAE,CAAI,CACnC,CAAC,CAAC,CAAC,IAAI,KAJK,yBAAyB,GAAG,EAAE,CAKlC,CACZ,CAAC;YACJ,CAAC,CAAC,IACD,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { Fragment } from \"react\";\nimport { useAuthConfig } from \"../../../hooks/internal/useAuthConfig.js\";\nimport { Divider } from \"../../divider.js\";\nimport { useAuthContext } from \"../context.js\";\nimport { AuthSection } from \"../sections/AuthSection.js\";\nimport { GeneralError } from \"./error/general-error.js\";\n\nexport const MainAuthContent = () => {\n  const { authStep } = useAuthContext();\n  const isError = authStep.type === \"initial\" && authStep.error;\n  const { header, sections, hideSignInText } = useAuthConfig(\n    ({ header, sections, hideSignInText }) => ({\n      header,\n      sections,\n      hideSignInText,\n    })\n  );\n\n  return (\n    <>\n      {header}\n      {!hideSignInText && <h3 className=\"font-semibold text-lg\">Sign in</h3>}\n      {isError && <GeneralError />}\n      {sections?.map((section, idx) => {\n        return (\n          <Fragment key={`auth-section-fragment-${idx}`}>\n            <AuthSection key={`auth-section-${idx}`} authTypes={section} />\n            {idx !== sections.length - 1 ? (\n              <Divider key={`divider-${idx}`} />\n            ) : null}\n          </Fragment>\n        );\n      })}\n    </>\n  );\n};\n"]}