{"version":3,"file":"modal.js","sourceRoot":"","sources":["../../../../src/components/auth/modal.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AACpC,OAAO,EAAE,gBAAgB,EAAE,MAAM,0CAA0C,CAAC;AAC5E,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAC3D,OAAO,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AACzD,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AACjE,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAClD,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAE9C,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,EAAE;IAC5B,MAAM,EAAE,WAAW,EAAE,GAAG,eAAe,EAAE,CAAC;IAC1C,MAAM,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,GAAG,WAAW,CAC5D,CAAC,EAAE,kBAAkB,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;QACjC,kBAAkB;QAClB,kBAAkB,EAAE,IAAI,EAAE,kBAAkB;KAC7C,CAAC,CACH,CAAC;IAEF,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,cAAc,EAAE,CAAC;IACnD,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,GAAG,YAAY,EAAE,CAAC;IAEjE,MAAM,YAAY,GAAG,WAAW,CAAC,GAAG,EAAE;QACpC,IAAI,kBAAkB,EAAE,CAAC;YACvB,aAAa,EAAE,CAAC;YAChB,WAAW,CAAC;gBACV,IAAI,EAAE,gBAAgB;aACvB,CAAC,CAAC;QACL,CAAC;IACH,CAAC,EAAE,CAAC,kBAAkB,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC,CAAC;IACrD,gBAAgB,CACd,YAAY,EACZ,WAAW;QACT,CAAC,QAAQ,CAAC,IAAI,KAAK,UAAU,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,CAAC;QAC7D,CAAC,MAAM,CACV,CAAC;IAEF,OAAO,CACL,KAAC,MAAM,IAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,YAC7C,cACE,SAAS,EAAE,2BACT,kBAAkB,IAAI,EACxB,kBAAkB,YAElB,KAAC,eAAe,IAAC,SAAS,SAAG,GACzB,GACC,CACV,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useCallback } from \"react\";\nimport { useNewUserSignup } from \"../../hooks/internal/useNewUserSignup.js\";\nimport { useAuthModal } from \"../../hooks/useAuthModal.js\";\nimport { useUiConfig } from \"../../hooks/useUiConfig.js\";\nimport { useSignerStatus } from \"../../hooks/useSignerStatus.js\";\nimport { Dialog } from \"../dialog/dialog.js\";\nimport { AuthCardContent } from \"./card/index.js\";\nimport { useAuthContext } from \"./context.js\";\n\nexport const AuthModal = () => {\n  const { isConnected } = useSignerStatus();\n  const { modalBaseClassName, addPasskeyOnSignup } = useUiConfig(\n    ({ modalBaseClassName, auth }) => ({\n      modalBaseClassName,\n      addPasskeyOnSignup: auth?.addPasskeyOnSignup,\n    })\n  );\n\n  const { setAuthStep, authStep } = useAuthContext();\n  const { isOpen, closeAuthModal, openAuthModal } = useAuthModal();\n\n  const handleSignup = useCallback(() => {\n    if (addPasskeyOnSignup) {\n      openAuthModal();\n      setAuthStep({\n        type: \"passkey_create\",\n      });\n    }\n  }, [addPasskeyOnSignup, openAuthModal, setAuthStep]);\n  useNewUserSignup(\n    handleSignup,\n    isConnected &&\n      (authStep.type === \"complete\" || authStep.type === \"initial\") &&\n      !isOpen\n  );\n\n  return (\n    <Dialog isOpen={isOpen} onClose={closeAuthModal}>\n      <div\n        className={`akui-modal md:w-[368px] ${\n          modalBaseClassName ?? \"\"\n        } overflow-hidden`}\n      >\n        <AuthCardContent showClose />\n      </div>\n    </Dialog>\n  );\n};\n"]}