{"version":3,"file":"focustrap.js","sourceRoot":"","sources":["../../../../src/components/dialog/focustrap.tsx"],"names":[],"mappings":";AAAA,wGAAwG;AAExG,OAAO,EAAE,MAAM,EAAE,SAAS,EAA0B,MAAM,OAAO,CAAC;AAElE,SAAS,YAAY;IACnB,MAAM,GAAG,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;IAEzC,MAAM,aAAa,GAAG,CAAC,KAAoB,EAAE,EAAE;QAC7C,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YACjB,OAAO;QACT,CAAC;QAED,kCAAkC;QAClC,MAAM,iBAAiB,GAAG,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAc;;;;;;;;KAQnE,CAAC,CAAC;QAEH,MAAM,qBAAqB,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACnD,MAAM,oBAAoB,GACxB,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAElD,MAAM,aAAa,GAAG,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC;QAE1C,IAAI,CAAC,aAAa,EAAE,CAAC;YACnB,OAAO;QACT,CAAC;QAED,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;YACnB,cAAc;YACd,IAAI,QAAQ,CAAC,aAAa,KAAK,qBAAqB,EAAE,CAAC;gBACrD,oBAAoB,CAAC,KAAK,EAAE,CAAC;gBAC7B,KAAK,CAAC,cAAc,EAAE,CAAC;YACzB,CAAC;QACH,CAAC;aAAM,CAAC;YACN,WAAW;YACX,IAAI,QAAQ,CAAC,aAAa,KAAK,oBAAoB,EAAE,CAAC;gBACpD,qBAAqB,CAAC,KAAK,EAAE,CAAC;gBAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;YACzB,CAAC;QACH,CAAC;IACH,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC;QACvB,IAAI,CAAC,EAAE,EAAE,CAAC;YACR,OAAO;QACT,CAAC;QAED,EAAE,CAAC,gBAAgB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;QAC9C,EAAE,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;QAElC,OAAO,GAAG,EAAE;YACV,EAAE,CAAC,mBAAmB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;QACnD,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,EAAE,GAAG,EAAE,CAAC;AACjB,CAAC;AAED,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,EAAE,QAAQ,EAAyB,EAAE,EAAE;IAC/D,MAAM,EAAE,GAAG,EAAE,GAAG,YAAY,EAAE,CAAC;IAE/B,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,GAAG,CAAC,OAAO,EAAE,CAAC;YAChB,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAEV,OAAO,CACL,cAAK,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAC,oBAAoB,YACvD,QAAQ,GACL,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["// Adapted from: https://hiddedevries.nl/en/blog/2017-01-29-using-javascript-to-trap-focus-in-an-element\n\nimport { useRef, useEffect, type PropsWithChildren } from \"react\";\n\nfunction useTrapFocus() {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    if (!ref.current) {\n      return;\n    }\n\n    // Elements that can receive focus\n    const focusableElements = ref.current.querySelectorAll<HTMLElement>(`\n      a[href]:not([disabled]),\n      button:not([disabled]),\n      textarea:not([disabled]),\n      input[type=\"text\"]:not([disabled]),\n      input[type=\"radio\"]:not([disabled]),\n      input[type=\"checkbox\"]:not([disabled]),\n      select:not([disabled])\n    `);\n\n    const firstFocusableElement = focusableElements[0];\n    const lastFocusableElement =\n      focusableElements[focusableElements.length - 1];\n\n    const isPressingTab = event.key === \"Tab\";\n\n    if (!isPressingTab) {\n      return;\n    }\n\n    if (event.shiftKey) {\n      // Shift + tab\n      if (document.activeElement === firstFocusableElement) {\n        lastFocusableElement.focus();\n        event.preventDefault();\n      }\n    } else {\n      // Just tab\n      if (document.activeElement === lastFocusableElement) {\n        firstFocusableElement.focus();\n        event.preventDefault();\n      }\n    }\n  };\n\n  useEffect(() => {\n    const el = ref.current;\n    if (!el) {\n      return;\n    }\n\n    el.addEventListener(\"keydown\", handleKeyDown);\n    el.focus({ preventScroll: true });\n\n    return () => {\n      el.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n\n  return { ref };\n}\n\nexport const FocusTrap = ({ children }: PropsWithChildren<{}>) => {\n  const { ref } = useTrapFocus();\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.focus({ preventScroll: true });\n    }\n  }, [ref]);\n\n  return (\n    <div ref={ref} tabIndex={0} className=\"focus:outline-none\">\n      {children}\n    </div>\n  );\n};\n"]}