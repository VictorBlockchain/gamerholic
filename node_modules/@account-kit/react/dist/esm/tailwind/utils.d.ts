import type { AccountKitThemeColor, ColorVariantRecord, DeepPartial } from "./types";
/**
 * Creates a color object to be used within account kit utilities, components, and themes
 *
 * @param {string} light the light mode color value
 * @param {string} dark the dark mode color value
 * @returns {ColorVariantRecord} the color set object
 */
export declare const createColorSet: (light: string, dark: string) => ColorVariantRecord;
/**
 * Overwrites the values in S with values in T if they exist
 *
 * @template {Record<string, any>} S the source object type
 * @param {S} source the source object to replace values with those from target
 * @param {DeepPartial<S>} target the target object to use as a source of truth
 * @returns {S} the deeply merged object of S and T
 */
export declare const apply: <S extends Record<string, any>>(source: S, target?: DeepPartial<S> | undefined) => S;
/**
 * Given an Account Kit theme color name, returns the css variable name
 *
 * @param {AccountKitThemeColor} name one of the Account Kit theme color names
 * @returns {string} the css variable name
 */
export declare const getColorVariableName: (name: AccountKitThemeColor) => string;
/**
 * Used to get the css variable name for the base border radius
 *
 * @returns {string} the css variable name for the base border radius
 */
export declare const getBorderRadiusBaseVariableName: () => string;
/**
 * Returns a css value for scaling the base border radius
 *
 * @param {number} scale the scale factor to apply to the base border radius
 * @returns {string} Returns a css value for scaling the base border radius
 */
export declare const getScaledBorderRadius: (scale: number) => string;
