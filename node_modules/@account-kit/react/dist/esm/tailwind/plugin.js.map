{"version":3,"file":"plugin.js","sourceRoot":"","sources":["../../../src/tailwind/plugin.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Config as TailwindConfig } from \"tailwindcss\";\nimport plugin from \"tailwindcss/plugin\";\nimport { borderRadiusVariables } from \"./components/border-vars.js\";\nimport { buttonComponents } from \"./components/buttons.js\";\nimport { colorVariables } from \"./components/colorsvars.js\";\nimport { formControlComponents } from \"./components/form-controls.js\";\nimport { inputComponents } from \"./components/input.js\";\nimport { modalComponents } from \"./components/modal.js\";\nimport { createDefaultTheme } from \"./theme.js\";\nimport type { AccountKitThemeColor, AccountKitThemeOverride } from \"./types.js\";\nimport {\n  borderRadiusUtilities,\n  borderRadiusValues,\n  borderUtilities,\n} from \"./utilities/borders.js\";\nimport { apply, getColorVariableName } from \"./utils.js\";\n\ntype TailWindPlugin = ReturnType<typeof plugin>;\n\n/**\n * Get the path to the @account-kit/react package and the tailwind content.\n * This is used within the tailwind.config.js to include the @account-kit content.\n *\n * @example\n * ```ts\n *\n * import accountKitUi, { getAccountKitContentPath } from \"@account-kit/react/tailwind\";\n * import type { Config } from \"tailwindcss\";\n *\n * const config: Config = {\n *  content: [\n *    ...otheContetPaths\n *   getAccountKitContentPath()\n *  ],\n *  theme: {},\n *  plugins: [accountKitUi()],\n * };\n *\n * export default config;\n * ```\n * @returns {string} The resolved path to the @account-kit/react package and the tailwind content\n */\nexport const getAccountKitContentPath = () => {\n  const pathToMe = require.resolve(\"@account-kit/react\");\n  const contentPath = `${pathToMe.replace(\n    \"index.js\",\n    \"\"\n  )}**/*.{js,ts,jsx,tsx,mdx}`;\n\n  return contentPath;\n};\n\n/**\n * Given an optional theme override, returns a tailwind plugin that\n * creates all of the necessary css to use the account kit ui components.\n *\n * @example\n * ```ts\n *\n * import accountKitUi, { getAccountKitContentPath } from \"@account-kit/react/tailwind\";\n * import type { Config } from \"tailwindcss\";\n *\n * const config: Config = {\n *  content: [\n *    ...otheContetPaths\n *   getAccountKitContentPath()\n *  ],\n *  theme: {},\n *  plugins: [accountKitUi()],\n * };\n *\n * export default config;\n * ```\n * @param {AccountKitThemeOverride} themeOverride optional parameter that allows for overriding any of the default account kit theme values\n * @returns {TailWindPlugin} a TailwindPlugin to be used within the tailwind.config.js\n */\nexport const accountKitUi: (\n  themeOverride?: AccountKitThemeOverride\n) => TailWindPlugin = (themeOverride) => {\n  const defaultTheme = createDefaultTheme();\n  const accountKitTheme = apply(defaultTheme, themeOverride);\n  const { colors, borderRadius, ...rest } = accountKitTheme;\n\n  return plugin(\n    ({ addComponents, addUtilities, matchUtilities }) => {\n      // utilities\n      addUtilities(borderUtilities);\n\n      // components\n      addComponents(colorVariables(accountKitTheme));\n      addComponents(borderRadiusVariables(accountKitTheme));\n      addComponents(buttonComponents);\n      addComponents(inputComponents);\n      addComponents(formControlComponents);\n      addComponents(modalComponents);\n      matchUtilities(borderRadiusUtilities, {\n        values: borderRadiusValues,\n      });\n    },\n    {\n      theme: {\n        extend: {\n          ...rest,\n          colors: Object.keys(colors).reduce(\n            (acc, key) => ({\n              ...acc,\n              [key]: `var(${getColorVariableName(\n                key as AccountKitThemeColor\n              )})`,\n            }),\n            {} as Record<AccountKitThemeColor, string>\n          ),\n          keyframes: {\n            \"fade-in\": {\n              \"0%\": { opacity: \"0\" },\n              \"100%\": { opacity: \"1\" },\n            },\n            \"slide-up\": {\n              \"0%\": {\n                transform: \"translateY(100%)\",\n                opacity: \"0\",\n              },\n              \"100%\": {\n                transform: \"translateY(0%)\",\n                opacity: \"1\",\n              },\n            },\n            \"fade-out\": {\n              \"0%\": { opacity: \"1\" },\n              \"100%\": { opacity: \"0\" },\n            },\n            \"slide-down\": {\n              \"0%\": {\n                transform: \"translateY(0%)\",\n                opacity: \"1\",\n              },\n              \"100%\": {\n                transform: \"translateY(100%)\",\n                opacity: \"0\",\n              },\n            },\n          },\n          animation: {\n            \"fade-in\": \"fade-in 150ms ease\",\n            \"slide-up\": \"slide-up 350ms cubic-bezier(.15,1.15,0.6,1.00)\",\n            \"fade-out\": \"fade-out 150ms ease\",\n            \"slide-down\": \"slide-down 350ms cubic-bezier(.15,1.15,0.6,1.00)\",\n          },\n        },\n      },\n    }\n  );\n};\n\n/**\n * A utility function for augmenting an existing tailwind config with the account kit ui components\n *\n * @param {TailwindConfig} config the existing tailwind config\n * @param {AccountKitThemeOverride} themeOverride optional parameter that allows overrides to Account Kit UI theme styles\n * @returns {TailwindConfig} the augmented tailwind config\n */\nexport const withAccountKitUi = (\n  config: TailwindConfig,\n  themeOverride?: AccountKitThemeOverride\n): TailwindConfig => ({\n  darkMode: [\n    \"variant\",\n    [\n      \"@media (prefers-color-scheme: dark) { &:not(.light, .light *) }\",\n      \"&:is(.dark, .dark *)\",\n    ],\n  ],\n  ...config,\n  content: Array.isArray(config.content)\n    ? [...config.content, getAccountKitContentPath()]\n    : {\n        ...config.content,\n        files: [...config.content.files, getAccountKitContentPath()],\n      },\n  plugins: [...(config.plugins ?? []), accountKitUi(themeOverride)],\n});\n"]}