import { type PropsWithChildren } from "react";
import { type StoreApi } from "zustand";
import type { AlchemyAccountsUIConfig } from "../types.js";
type AlchemyAccountsUIConfigWithDefaults = Omit<Required<AlchemyAccountsUIConfig>, "auth"> & {
    auth: NonNullable<Required<AlchemyAccountsUIConfig["auth"]>>;
};
export type UiConfigStore = AlchemyAccountsUIConfig & {
    isModalOpen: boolean;
    setModalOpen: (isOpen: boolean) => void;
    updateConfig: (config: AlchemyAccountsUIConfig) => void;
};
export declare const DEFAULT_UI_CONFIG: AlchemyAccountsUIConfigWithDefaults;
export declare function createUiConfigStore(initialConfig?: AlchemyAccountsUIConfig): import("zustand").UseBoundStore<StoreApi<UiConfigStore>>;
export declare function useUiConfig<T = UiConfigStore>(selector?: (state: UiConfigStore) => T): T;
export declare function UiConfigProvider({ children, initialConfig, }: PropsWithChildren<{
    initialConfig?: AlchemyAccountsUIConfig;
}>): import("react/jsx-runtime").JSX.Element;
export {};
