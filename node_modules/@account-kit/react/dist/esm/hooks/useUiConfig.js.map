{"version":3,"file":"useUiConfig.js","sourceRoot":"","sources":["../../../src/hooks/useUiConfig.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,EACL,aAAa,EACb,UAAU,EACV,MAAM,GAEP,MAAM,OAAO,CAAC;AACf,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAiB,MAAM,SAAS,CAAC;AAC1D,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAmBnD,MAAM,CAAC,MAAM,iBAAiB,GAAwC;IACpE,iBAAiB,EAAE,MAA+B;IAClD,IAAI,EAAE;QACJ,kBAAkB,EAAE,KAAK;QACzB,MAAM,EAAE,IAAI;QACZ,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;QACtD,aAAa,EAAE,GAAG,EAAE,GAAE,CAAC;QACvB,cAAc,EAAE,KAAK;KACtB;IACD,kBAAkB,EAAE,EAAE;IACtB,UAAU,EAAE,EAAE;CACf,CAAC;AAEF,MAAM,UAAU,mBAAmB,CACjC,gBAAyC,iBAAiB;IAE1D,OAAO,MAAM,CAAgB,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACrC,GAAG,aAAa;QAChB,WAAW,EAAE,KAAK;QAClB,YAAY,EAAE,CAAC,MAAe,EAAE,EAAE;YAChC,GAAG,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC;QAC/B,CAAC;QACD,YAAY,EAAE,CAAC,MAA+B,EAAE,EAAE;YAChD,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;QAC7B,CAAC;KACF,CAAC,CAAC,CAAC;AACN,CAAC;AAED,MAAM,eAAe,GAAG,aAAa,CACnC,SAAS,CACV,CAAC;AAMF;;;;;;;;;;;;;;GAcG;AACH,MAAM,UAAU,WAAW,CACzB,QAAkD;IAElD,MAAM,KAAK,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC;IAE1C,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;IAC7D,CAAC;IAED,OAAO,QAAQ,CAAC,KAAK,EAAE,UAAU,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,EAC/B,QAAQ,EACR,aAAa,GACkD;IAC/D,MAAM,QAAQ,GAAG,MAAM,EAA2B,CAAC;IACnD,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACtB,QAAQ,CAAC,OAAO,GAAG,mBAAmB,CAAC,aAAa,CAAC,CAAC;IACxD,CAAC;IAED,OAAO,CACL,KAAC,eAAe,CAAC,QAAQ,IAAC,KAAK,EAAE,QAAQ,CAAC,OAAO,YAC9C,QAAQ,GACgB,CAC5B,CAAC;AACJ,CAAC","sourcesContent":["\"use client\";\n\nimport {\n  createContext,\n  useContext,\n  useRef,\n  type PropsWithChildren,\n} from \"react\";\nimport { create, useStore, type StoreApi } from \"zustand\";\nimport { useShallow } from \"zustand/react/shallow\";\nimport type {\n  AlchemyAccountsUIConfig,\n  AuthIllustrationStyle,\n} from \"../types.js\";\n\ntype AlchemyAccountsUIConfigWithDefaults = Omit<\n  Required<AlchemyAccountsUIConfig>,\n  \"auth\"\n> & {\n  auth: NonNullable<Required<AlchemyAccountsUIConfig[\"auth\"]>>;\n};\n\nexport type UiConfigStore = AlchemyAccountsUIConfig & {\n  isModalOpen: boolean;\n  setModalOpen: (isOpen: boolean) => void;\n  updateConfig: (config: AlchemyAccountsUIConfig) => void;\n};\n\nexport const DEFAULT_UI_CONFIG: AlchemyAccountsUIConfigWithDefaults = {\n  illustrationStyle: \"flat\" as AuthIllustrationStyle,\n  auth: {\n    addPasskeyOnSignup: false,\n    header: null,\n    hideError: false,\n    sections: [[{ type: \"email\" }], [{ type: \"passkey\" }]],\n    onAuthSuccess: () => {},\n    hideSignInText: false,\n  },\n  modalBaseClassName: \"\",\n  supportUrl: \"\",\n};\n\nexport function createUiConfigStore(\n  initialConfig: AlchemyAccountsUIConfig = DEFAULT_UI_CONFIG\n) {\n  return create<UiConfigStore>((set) => ({\n    ...initialConfig,\n    isModalOpen: false,\n    setModalOpen: (isOpen: boolean) => {\n      set({ isModalOpen: isOpen });\n    },\n    updateConfig: (config: AlchemyAccountsUIConfig) => {\n      set(() => ({ ...config }));\n    },\n  }));\n}\n\nconst UiConfigContext = createContext<StoreApi<UiConfigStore> | undefined>(\n  undefined\n);\n\nexport function useUiConfig<T = UiConfigStore>(\n  selector?: (state: UiConfigStore) => T\n): T;\n\n/**\n * A custom [hook](https://github.com/alchemyplatform/aa-sdk/blob/main/account-kit/react/src/hooks/useUiConfig.tsx) for accessing UI configuration from the `UiConfigContext`. Allows optional selection of specific parts of the UI config state using a selector function.\n * For editing and updating the underlying UI config on the fly.\n *\n * @param {(state: UiConfigStore) => T} [selector] - An optional function to select specific parts of the UI config state. [ref](https://github.com/alchemyplatform/aa-sdk/blob/main/account-kit/react/src/hooks/useUiConfig.tsx#L23)\n * @returns {T} - The selected state passed through the selector function or the entire state if no selector is provided\n * @throws Will throw an error if the `UiConfigContext` is not present in the component tree\n *\n * @example\n * ```tsx twoslash\n * import { useUiConfig } from \"@account-kit/react\";\n *\n * const { illustrationStyle, auth } = useUiConfig(({ illustrationStyle, auth }) => ({ illustrationStyle, auth }));\n * ```\n */\nexport function useUiConfig(\n  selector?: (state: UiConfigStore) => UiConfigStore\n): UiConfigStore {\n  const store = useContext(UiConfigContext);\n\n  if (!store) {\n    throw new Error(\"UiConfigContext must be present in root\");\n  }\n\n  return useStore(store, useShallow(selector ?? ((state) => state)));\n}\n\nexport function UiConfigProvider({\n  children,\n  initialConfig,\n}: PropsWithChildren<{ initialConfig?: AlchemyAccountsUIConfig }>) {\n  const storeRef = useRef<StoreApi<UiConfigStore>>();\n  if (!storeRef.current) {\n    storeRef.current = createUiConfigStore(initialConfig);\n  }\n\n  return (\n    <UiConfigContext.Provider value={storeRef.current}>\n      {children}\n    </UiConfigContext.Provider>\n  );\n}\n"]}