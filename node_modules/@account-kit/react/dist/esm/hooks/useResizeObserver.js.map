{"version":3,"file":"useResizeObserver.js","sourceRoot":"","sources":["../../../src/hooks/useResizeObserver.ts"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport type { RefObject } from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\n\ntype Size = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\ntype UseResizeObserverOptions<T extends HTMLElement = HTMLElement> = {\n  ref: RefObject<T>;\n  onResize?: (size: Size) => void;\n  box?: \"border-box\" | \"content-box\" | \"device-pixel-content-box\";\n};\n\nconst initialSize: Size = {\n  width: undefined,\n  height: undefined,\n};\n\n// See: https://usehooks-ts.com/react-hook/use-resize-observer\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport function useResizeObserver<T extends HTMLElement = HTMLElement>(\n  options: UseResizeObserverOptions<T>\n): Size {\n  const { ref, box = \"content-box\" } = options;\n  const [{ width, height }, setSize] = useState<Size>(initialSize);\n  const previousSize = useRef<Size>({ ...initialSize });\n  const onResize = useRef<((size: Size) => void) | undefined>(undefined);\n  onResize.current = options.onResize;\n\n  const [isMounted, setIsMounted] = useState(false);\n\n  useEffect(() => {\n    setIsMounted(true);\n    return () => setIsMounted(false);\n  }, []);\n\n  useEffect(() => {\n    if (!ref.current) return;\n\n    if (typeof window === \"undefined\" || !(\"ResizeObserver\" in window)) return;\n\n    const observer = new ResizeObserver(([entry]) => {\n      const boxProp =\n        box === \"border-box\"\n          ? \"borderBoxSize\"\n          : box === \"device-pixel-content-box\"\n          ? \"devicePixelContentBoxSize\"\n          : \"contentBoxSize\";\n\n      const newWidth = extractSize(entry, boxProp, \"inlineSize\");\n      const newHeight = extractSize(entry, boxProp, \"blockSize\");\n\n      const hasChanged =\n        previousSize.current.width !== newWidth ||\n        previousSize.current.height !== newHeight;\n\n      if (hasChanged) {\n        const newSize: Size = { width: newWidth, height: newHeight };\n        previousSize.current.width = newWidth;\n        previousSize.current.height = newHeight;\n\n        if (onResize.current) {\n          onResize.current(newSize);\n        } else {\n          if (isMounted) {\n            setSize(newSize);\n          }\n        }\n      }\n    });\n\n    observer.observe(ref.current, { box });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [box, ref, isMounted]);\n\n  return { width, height };\n}\n\ntype BoxSizesKey = keyof Pick<\n  ResizeObserverEntry,\n  \"borderBoxSize\" | \"contentBoxSize\" | \"devicePixelContentBoxSize\"\n>;\n\nfunction extractSize(\n  entry: ResizeObserverEntry,\n  box: BoxSizesKey,\n  sizeType: keyof ResizeObserverSize\n): number | undefined {\n  if (!entry[box]) {\n    if (box === \"contentBoxSize\") {\n      return entry.contentRect[sizeType === \"inlineSize\" ? \"width\" : \"height\"];\n    }\n    return undefined;\n  }\n\n  return Array.isArray(entry[box])\n    ? entry[box][0][sizeType]\n    : // @ts-ignore Support Firefox's non-standard behavior\n      (entry[box][sizeType] as number);\n}\n"]}