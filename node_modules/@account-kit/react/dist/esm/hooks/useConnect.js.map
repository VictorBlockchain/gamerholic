{"version":3,"file":"useConnect.js","sourceRoot":"","sources":["../../../src/hooks/useConnect.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAGb,OAAO,EACL,UAAU,IAAI,gBAAgB,GAG/B,MAAM,OAAO,CAAC;AACf,OAAO,EAAE,wBAAwB,EAAE,MAAM,+BAA+B,CAAC;AACzE,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH,MAAM,CAAC,MAAM,UAAU,GAAG,CACxB,MAAiD,EACnB,EAAE;IAChC,MAAM,EACJ,MAAM,EAAE,EACN,SAAS,EAAE,EAAE,WAAW,EAAE,GAC3B,GACF,GAAG,wBAAwB,EAAE,CAAC;IAE/B,OAAO,gBAAgB,CAAC;QACtB,MAAM,EAAE,WAAW;QACnB,QAAQ,EAAE;YACR,GAAG,MAAM;YACT,SAAS,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE;gBACrB,WAAW,CAAC,UAAU,CAAC;oBACrB,IAAI,EAAE,eAAe;iBACtB,CAAC,CAAC;gBACH,MAAM,EAAE,SAAS,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;YAC/B,CAAC;SACF;KACF,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["\"use client\";\n\nimport type { Config } from \"@wagmi/core\";\nimport {\n  useConnect as wagmi_useConnect,\n  type UseConnectParameters,\n  type UseConnectReturnType,\n} from \"wagmi\";\nimport { useAlchemyAccountContext } from \"./useAlchemyAccountContext.js\";\nimport { ReactLogger } from \"../metrics.js\";\n\n/**\n * Re-exported [wagmi hook](https://wagmi.sh/react/api/hooks/useConnect) for connecting an EOA. This hook\n * uses the internal wagmi config though so that the state\n * is in sync with the rest of the Alchemy Account hook state.\n * Useful if you wnat to connect to an EOA.\n *\n * @param {UseMutationParameters} params mutation parameters to use for the connect mutation\n * @returns {UseConnectReturnType} the wagmi useConnect return type\n *\n * @example\n * ```ts twoslash\n * import { useConnect } from \"@account-kit/react\";\n *\n * const { connectors, connect } = useConnect({\n *  // these are optional\n *  onSuccess: () => {\n *   // do something on success\n *  },\n *  onError: (error) => console.error(error),\n * });\n * ```\n */\nexport const useConnect = (\n  params?: UseConnectParameters<Config>[\"mutation\"]\n): UseConnectReturnType<Config> => {\n  const {\n    config: {\n      _internal: { wagmiConfig },\n    },\n  } = useAlchemyAccountContext();\n\n  return wagmi_useConnect({\n    config: wagmiConfig,\n    mutation: {\n      ...params,\n      onSuccess: (...args) => {\n        ReactLogger.trackEvent({\n          name: \"eoa_connected\",\n        });\n        params?.onSuccess?.(...args);\n      },\n    },\n  });\n};\n"]}