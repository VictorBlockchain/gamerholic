import type { KnownAuthProvider } from "./signer";
export type ScopeAndClaims = {
    scope: string;
    claims?: string;
};
/**
 * Returns the default scope and claims when using a known auth provider
 *
 * @param {string} knownAuthProviderId id of a known auth provider, e.g. "google"
 * @returns {ScopeAndClaims | undefined} default scope and claims
 */
export declare function getDefaultScopeAndClaims(knownAuthProviderId: KnownAuthProvider): ScopeAndClaims | undefined;
/**
 * "openid" is a required scope in the OIDC protocol. Insert it if the user
 * forgot.
 *
 * @param {string} scope scope param which may be missing "openid"
 * @returns {string} scope which most definitely contains "openid"
 */
export declare function addOpenIdIfAbsent(scope: string): string;
