import { BaseError as CoreBaseError } from "@aa-sdk/core";
import { VERSION } from "./version.js";
/**
 * Represents the base class for custom errors, inheriting from `CoreBaseError` and overriding the version with a specific version number.
 */
export class BaseError extends CoreBaseError {
    constructor() {
        super(...arguments);
        // This version could be different from the aa-core version so we overwrite this here.
        Object.defineProperty(this, "version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: VERSION
        });
    }
}
/**
 * Error thrown when a client only property is accessed on the server
 */
export class ClientOnlyPropertyError extends BaseError {
    /**
     * Creates a new ClientOnlyPropertyError
     *
     * @param {string} property the name of the property that is only available on the client
     */
    constructor(property) {
        super(`${property} is only available on the client`);
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: "ClientOnlyPropertyError"
        });
    }
}
/**
 * Error thrown when a client does not have a chain configured in the connections object
 * This is not really meant to be used out of the SDK, but is exported for convenience (ie. matching errors are of an instance of this class)
 */
export class ChainNotFoundError extends BaseError {
    /**
     * Constructs a new error indicating that the specified chain was not found in the connections configuration object.
     *
     * @example
     * ```ts
     * import { ChainNotFoundError } from "@account-kit/core";
     * import { sepolia } from "@account-kit/infra";
     *
     * throw new ChainNotFoundError(sepolia);
     * ```
     *
     * @param {Chain} chain The chain for which the error is being thrown
     */
    constructor(chain) {
        super(`Chain (${chain.name}) not found in connections config object`, {
            docsPath: "https://accountkit.alchemy.com/react/createConfig",
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: "ChainNotFoundError"
        });
    }
}
//# sourceMappingURL=errors.js.map