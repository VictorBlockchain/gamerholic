{"version":3,"file":"watchUser.js","sourceRoot":"","sources":["../../../src/actions/watchUser.ts"],"names":[],"mappings":"AAGA;;;;;;;;;;;;;;GAcG;AACH,MAAM,CAAC,MAAM,SAAS,GACpB,CAAC,MAA6B,EAAE,EAAE,CAAC,CAAC,QAA+B,EAAE,EAAE;IACrE,OAAO,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE;QAC1D,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,KAAK,CAAC,EAAE,MAAM;KAC9C,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import type { User } from \"@account-kit/signer\";\nimport type { AlchemyAccountsConfig } from \"../types\";\n\n/**\n * Watches for changes to the user in the client store and triggers the provided callback when a change is detected.\n *\n * @example\n * ```ts\n * import { watchUser } from \"@account-kit/core\";\n * // see createConfig for more information on how to create a config\n * import { config } from \"./config\";\n *\n * watchUser(config)(console.log);\n * ```\n *\n * @param {AlchemyAccountsConfig} config the configuration containing the client store\n * @returns {(onChange: (user: User) => void) => (() => void)} a function which accepts a callback that fires when the user changes and returns a function to unsubscribe from the user updates\n */\nexport const watchUser =\n  (config: AlchemyAccountsConfig) => (onChange: (user?: User) => void) => {\n    return config.store.subscribe(({ user }) => user, onChange, {\n      equalityFn: (a, b) => a?.userId === b?.userId,\n    });\n  };\n"]}