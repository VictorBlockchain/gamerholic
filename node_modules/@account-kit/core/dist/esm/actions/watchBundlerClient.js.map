{"version":3,"file":"watchBundlerClient.js","sourceRoot":"","sources":["../../../src/actions/watchBundlerClient.ts"],"names":[],"mappings":"AAAA,OAAO,EAAiC,MAAM,oBAAoB,CAAC;AAGnE;;;;;;;;;;;;;;GAcG;AACH,MAAM,CAAC,MAAM,kBAAkB,GAC7B,CAAC,MAA6B,EAAE,EAAE,CAClC,CAAC,QAA2D,EAAE,EAAE;IAC9D,OAAO,MAAM,CAAC,KAAK,CAAC,SAAS,CAC3B,CAAC,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC,aAAa,EACpC,QAAQ,EACR;QACE,UAAU,CAAC,CAAC,EAAE,CAAC;YACb,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;QACnC,CAAC;KACF,CACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { type ClientWithAlchemyMethods } from \"@account-kit/infra\";\nimport type { AlchemyAccountsConfig } from \"../types\";\n\n/**\n * Watches for changes to the bundler client within the given configuration and triggers a callback when changes occur.\n *\n * @example\n * ```ts\n * import { watchBundlerClient } from \"@account-kit/core\";\n * // see createConfig for more information on how to create a config\n * import { config } from \"./config\";\n *\n * watchBundlerClient(config)(console.log);\n * ```\n *\n * @param {AlchemyAccountsConfig} config The configuration object containing the core store\n * @returns {(onChange: (bundlerClient: ClientWithAlchemyMethods) => void) => (() => void)} A function accepting a callback function to invoke when the bundler client changes and returns a function to unsubscribe from the store\n */\nexport const watchBundlerClient =\n  (config: AlchemyAccountsConfig) =>\n  (onChange: (bundlerClient: ClientWithAlchemyMethods) => void) => {\n    return config.store.subscribe(\n      ({ bundlerClient }) => bundlerClient,\n      onChange,\n      {\n        equalityFn(a, b) {\n          return a.chain.id === b.chain.id;\n        },\n      }\n    );\n  };\n"]}