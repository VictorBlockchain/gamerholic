{"version":3,"file":"watchSigner.js","sourceRoot":"","sources":["../../../src/actions/watchSigner.ts"],"names":[],"mappings":"AAEA;;;;;;;;;;;;;;GAcG;AACH,MAAM,CAAC,MAAM,WAAW,GACtB,CAAC,MAA6B,EAAE,EAAE,CAClC,CAAC,QAA0C,EAAE,EAAE;IAC7C,OAAO,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAClE,CAAC,CAAC","sourcesContent":["import type { AlchemyAccountsConfig, AlchemySigner } from \"../types\";\n\n/**\n * Subscribe to changes of the signer instance on the client store.\n *\n * @example\n * ```ts\n * import { watchSigner } from \"@account-kit/core\";\n * // see createConfig for more information on how to create a config\n * import { config } from \"./config\";\n *\n * watchSigner(config)(console.log);\n * ```\n *\n * @param {AlchemyAccountsConfig} config the account config containing the client store\n * @returns {(onChange: (chain: AlchemySigner) => void) => (() => void)} a function which accepts an onChange callback that will be fired when the signer changes and returns a function to unsubscribe from the store\n */\nexport const watchSigner =\n  (config: AlchemyAccountsConfig) =>\n  (onChange: (signer?: AlchemySigner) => void) => {\n    return config.store.subscribe(({ signer }) => signer, onChange);\n  };\n"]}