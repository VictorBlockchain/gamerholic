{"version":3,"file":"reviver.js","sourceRoot":"","sources":["../../../src/utils/reviver.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,IAAY,EAAE,MAAW,EAAE,EAAE;IACxD,IAAI,KAAK,GAAG,MAAM,CAAC;IACnB,IAAI,KAAK,EAAE,MAAM,KAAK,WAAW,EAAE,CAAC;QAClC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,EAAE,GAAG,KAAK,CAAC;QACpC,KAAK,GAAG,MAAM,CAAC;IACjB,CAAC;IACD,IAAI,KAAK,EAAE,MAAM,KAAK,QAAQ;QAAE,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC5D,IAAI,KAAK,EAAE,MAAM,KAAK,KAAK;QAAE,KAAK,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC1D,OAAO,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["/**\n * Revives a Map and BigInts from a JSON string that contains them\n * in the format of {__type: \"bigint\" | \"Map\", value: any }\n *\n * @param {string} _key the key in the JSON object being revivied\n * @param {any} value_ the value of the key being revived\n * @returns {any} the revived value\n */\nexport const storeReviver = (_key: string, value_: any) => {\n  let value = value_;\n  if (value?.__type === \"Transport\") {\n    const { __type, ...config } = value;\n    value = config;\n  }\n  if (value?.__type === \"bigint\") value = BigInt(value.value);\n  if (value?.__type === \"Map\") value = new Map(value.value);\n  return value;\n};\n"]}