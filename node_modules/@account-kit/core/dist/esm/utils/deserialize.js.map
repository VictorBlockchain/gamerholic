{"version":3,"file":"deserialize.js","sourceRoot":"","sources":["../../../src/utils/deserialize.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,cAAc,CAAC;AAE5C;;;;;;;;GAQG;AACH,MAAM,UAAU,WAAW,CAAO,KAAa;IAC7C,OAAO,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,YAAY,CAAC,CAAC;AAC7D,CAAC","sourcesContent":["import { storeReviver } from \"./reviver.js\";\n\n/**\n * JSON parses a string while correctly handling BigInt and Map types.\n * This method will take the string input, decodeURIComponent it, and then json parse it.\n * It handles BigInt and Map types by checking for the __type key and converting the value to the correct type.\n * Those types are generated by the `serialize` method exported alongside this one\n *\n * @param {string} value the string to deserialize\n * @returns {T} the parsed object\n */\nexport function deserialize<type>(value: string): type {\n  return JSON.parse(decodeURIComponent(value), storeReviver);\n}\n"]}