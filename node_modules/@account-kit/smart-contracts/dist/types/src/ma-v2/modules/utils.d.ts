import type { Chain, Address } from "viem";
/**
 * Maps a given chain to a specific address of the webauthn validation module by its chain ID. If no direct mapping exists, it defaults to returning a specific address.
 *
 * @example
 * ```ts
 * import { getDefaultWebauthnValidationModuleAddress } from "@account-kit/smart-contracts";
 * import { Chain, Address } from "viem";
 *
 * const chain: Chain = ...
 * const webauthnValidationAddress: Address = getDefaultWebauthnValidationModuleAddress(chain);
 * ```
 * @param {Chain} chain The chain object containing the chain ID to map
 * @returns {Address} The webauthn validation module address associated with the specified chain ID or a default address if no specific mapping exists
 */
export declare const getDefaultWebauthnValidationModuleAddress: (chain: Chain) => Address;
/**
 * Maps a given chain to a specific address of the time range module by its chain ID. If no direct mapping exists, it defaults to returning a specific address.
 *
 * @example
 * ```ts
 * import { getDefaultTimeRangeModuleAddress } from "@account-kit/smart-contracts";
 * import { Chain, Address } from "viem";
 *
 * const chain: Chain = ...
 * const timeRangeModuleAddress: Address = getDefaultTimeRangeModuleAddress(chain);
 * ```
 * @param {Chain} chain The chain object containing the chain ID to map
 * @returns {Address} The time range module address associated with the specified chain ID or a default address if no specific mapping exists
 */
export declare const getDefaultTimeRangeModuleAddress: (chain: Chain) => Address;
/**
 * Maps a given chain to a specific address of the single signer validation module by its chain ID. If no direct mapping exists, it defaults to returning a specific address.
 *
 * @example
 * ```ts
 * import { getDefaultSingleSignerValidationModuleAddress } from "@account-kit/smart-contracts";
 * import { Chain, Address } from "viem";
 *
 * const chain: Chain = ...
 * const singleSignerValidationAddress: Address = getDefaultSingleSignerValidationModuleAddress(chain);
 * ```
 * @param {Chain} chain The chain object containing the chain ID to map
 * @returns {Address} The single signer validation module address associated with the specified chain ID or a default address if no specific mapping exists
 */
export declare const getDefaultSingleSignerValidationModuleAddress: (chain: Chain) => Address;
/**
 * Maps a given chain to a specific address of the paymaster guard module by its chain ID. If no direct mapping exists, it defaults to returning a specific address.
 *
 * @example
 * ```ts
 * import { getDefaultPaymasterGuardModuleAddress } from "@account-kit/smart-contracts";
 * import { Chain, Address } from "viem";
 *
 * const chain: Chain = ...
 * const paymasterGuardAddress: Address = getDefaultPaymasterGuardModuleAddress(chain);
 * ```
 * @param {Chain} chain The chain object containing the chain ID to map
 * @returns {Address} The paymaster guard module address associated with the specified chain ID or a default address if no specific mapping exists
 */
export declare const getDefaultPaymasterGuardModuleAddress: (chain: Chain) => Address;
/**
 * Maps a given chain to a specific address of the native token limit module by its chain ID. If no direct mapping exists, it defaults to returning a specific address.
 *
 * @example
 * ```ts
 * import { getDefaultNativeTokenLimitModuleAddress } from "@account-kit/smart-contracts";
 * import { Chain, Address } from "viem";
 *
 * const chain: Chain = ...
 * const nativeTokenLimitAddress: Address = getDefaultNativeTokenLimitModuleAddress(chain);
 * ```
 * @param {Chain} chain The chain object containing the chain ID to map
 * @returns {Address} The native token limit module address associated with the specified chain ID or a default address if no specific mapping exists
 */
export declare const getDefaultNativeTokenLimitModuleAddress: (chain: Chain) => Address;
/**
 * Maps a given chain to a specific address of the allowlist module by its chain ID. If no direct mapping exists, it defaults to returning a specific address.
 *
 * @example
 * ```ts
 * import { getDefaultAllowlistModuleAddress } from "@account-kit/smart-contracts";
 * import { Chain, Address } from "viem";
 *
 * const chain: Chain = ...
 * const allowlistModule: Address = getDefaultAllowlistModuleAddress(chain);
 * ```
 * @param {Chain} chain The chain object containing the chain ID to map
 * @returns {Address} The allowlist module address associated with the specified chain ID or a default address if no specific mapping exists
 */
export declare const getDefaultAllowlistModuleAddress: (chain: Chain) => Address;
//# sourceMappingURL=utils.d.ts.map