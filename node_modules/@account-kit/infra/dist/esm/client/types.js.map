{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/client/types.ts"],"names":[],"mappings":"AAAA,OAAO,EAIN,MAAM,cAAc,CAAC","sourcesContent":["import {\n  type BundlerClient,\n  type Erc7677RpcSchema,\n  type UserOperationRequest,\n} from \"@aa-sdk/core\";\nimport type {\n  SimulateUserOperationAssetChangesRequest,\n  SimulateUserOperationAssetChangesResponse,\n  RequestGasAndPaymasterAndDataRequest,\n  RequestGasAndPaymasterAndDataResponse,\n} from \"../actions/types\";\nimport type { AlchemyTransport } from \"../alchemyTransport\";\n\nexport type AlchemyRpcSchema = [\n  {\n    Method: \"alchemy_simulateUserOperationAssetChanges\";\n    Parameters: SimulateUserOperationAssetChangesRequest;\n    ReturnType: SimulateUserOperationAssetChangesResponse;\n  },\n  {\n    Method: \"rundler_maxPriorityFeePerGas\";\n    Parameters: [];\n    ReturnType: UserOperationRequest[\"maxPriorityFeePerGas\"];\n  },\n  ...Erc7677RpcSchema<{ policyId: string }>,\n  {\n    Method: \"alchemy_requestGasAndPaymasterAndData\";\n    Parameters: RequestGasAndPaymasterAndDataRequest;\n    ReturnType: RequestGasAndPaymasterAndDataResponse;\n  }\n];\n\nexport type ClientWithAlchemyMethods = BundlerClient<AlchemyTransport> & {\n  request: BundlerClient<AlchemyTransport>[\"request\"] &\n    {\n      request(args: {\n        method: \"alchemy_simulateUserOperationAssetChanges\";\n        params: SimulateUserOperationAssetChangesRequest;\n      }): Promise<SimulateUserOperationAssetChangesResponse>;\n\n      request(args: {\n        method: \"rundler_maxPriorityFeePerGas\";\n        params: [];\n      }): Promise<UserOperationRequest[\"maxPriorityFeePerGas\"]>;\n\n      request(args: {\n        method: \"alchemy_requestGasAndPaymasterAndData\";\n        params: RequestGasAndPaymasterAndDataRequest;\n      }): Promise<RequestGasAndPaymasterAndDataResponse>;\n    }[\"request\"];\n};\n"]}