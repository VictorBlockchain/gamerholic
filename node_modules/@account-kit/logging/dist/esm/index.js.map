{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,aAAa,CAAC;AACjD,OAAO,EAAE,UAAU,EAAE,MAAM,WAAW,CAAC;AACvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,aAAa,CAAC;AASjD,MAAM,UAAU,YAAY,CAAC,OAAsB;IACjD,MAAM,WAAW,GAAG,CAAC,GAAG,EAAE;QACxB,IAAI,CAAC;YACH,OAAO,OAAO,MAAM,KAAK,WAAW;gBAClC,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC;gBAC7B,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,+CAA+C,EAAE,CAAC,CAAC,CAAC;YAClE,OAAO,UAAU,CAAC;QACpB,CAAC;IACH,CAAC,CAAC,EAAE,CAAC;IAEL,MAAM,MAAM,GAAgB;QAC1B,GAAG,WAAW;QACd,QAAQ,CACN,IAAY,EACZ,IAA8B;YAE9B,OAAO,UAAqB,GAAG,IAAW;gBACxC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBACzB,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACtC,IAAI,MAAM,YAAY,OAAO,EAAE,CAAC;oBAC9B,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;wBACzB,WAAW,CAAC,UAAU,CAAC;4BACrB,IAAI,EAAE,aAAa;4BACnB,IAAI,EAAE;gCACJ,eAAe,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK;gCACnC,YAAY,EAAE,IAAI;6BACnB;yBACF,CAAC,CAAC;wBAEH,OAAO,GAAG,CAAC;oBACb,CAAC,CAAS,CAAC;gBACb,CAAC;gBAED,WAAW,CAAC,UAAU,CAAC;oBACrB,IAAI,EAAE,aAAa;oBACnB,IAAI,EAAE;wBACJ,eAAe,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK;wBACnC,YAAY,EAAE,IAAI;qBACnB;iBACF,CAAC,CAAC;gBACH,OAAO,MAAM,CAAC;YAChB,CAAC,CAAC;QACJ,CAAC;KACF,CAAC;IAEF,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import { createClientLogger } from \"./client.js\";\nimport { noopLogger } from \"./noop.js\";\nimport { createServerLogger } from \"./server.js\";\nimport type { EventLogger, EventsSchema, LoggerContext } from \"./types\";\n\nexport type * from \"./types.js\";\n\nexport function createLogger<Schema extends EventsSchema = []>(\n  context: LoggerContext\n): EventLogger<Schema>;\n\nexport function createLogger(context: LoggerContext): EventLogger {\n  const innerLogger = (() => {\n    try {\n      return typeof window === \"undefined\"\n        ? createServerLogger(context)\n        : createClientLogger(context);\n    } catch (e) {\n      console.error(\"[Safe to ignore] failed to initialize metrics\", e);\n      return noopLogger;\n    }\n  })();\n\n  const logger: EventLogger = {\n    ...innerLogger,\n    profiled<TArgs extends any[], TRet>(\n      name: string,\n      func: (...args: TArgs) => TRet\n    ): (...args: TArgs) => TRet {\n      return function (this: any, ...args: TArgs): TRet {\n        const start = Date.now();\n        const result = func.apply(this, args);\n        if (result instanceof Promise) {\n          return result.then((res) => {\n            innerLogger.trackEvent({\n              name: \"performance\",\n              data: {\n                executionTimeMs: Date.now() - start,\n                functionName: name,\n              },\n            });\n\n            return res;\n          }) as TRet;\n        }\n\n        innerLogger.trackEvent({\n          name: \"performance\",\n          data: {\n            executionTimeMs: Date.now() - start,\n            functionName: name,\n          },\n        });\n        return result;\n      };\n    },\n  };\n\n  return logger;\n}\n"]}