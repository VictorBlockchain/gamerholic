{"version":3,"file":"contextAllowlist.js","sourceRoot":"","sources":["../../../src/plugins/contextAllowlist.ts"],"names":[],"mappings":"AAEA,MAAM,SAAS,GAAsB,CAAC,MAAM,CAAU,CAAC;AAEvD,SAAS,YAAY,CAAC,GAAY;IAChC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QAChD,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;QAErC,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAiD,CAAC,CAAC;IAEtD,OAAO,GAAG,CAAC;AACb,CAAC;AAED;;;;GAIG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAAW;IAC5C,IAAI,EAAE,2BAA2B;IACjC,IAAI,EAAE,YAAY;IAElB,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI;IACpB,IAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE;IAE7B,KAAK,EAAE,YAAY;IACnB,QAAQ,EAAE,YAAY;IACtB,IAAI,EAAE,YAAY;IAClB,KAAK,EAAE,YAAY;IACnB,KAAK,EAAE,YAAY;IACnB,MAAM,EAAE,YAAY;CACrB,CAAC","sourcesContent":["import type { Context, Plugin } from \"@segment/analytics-next\";\n\nconst allowlist: readonly string[] = [\"page\"] as const;\n\nfunction stripContext(ctx: Context): Context {\n  ctx.event.context = allowlist.reduce((acc, key) => {\n    acc[key] = ctx.event?.context?.[key];\n\n    return acc;\n  }, {} as Record<(typeof allowlist)[number], unknown>);\n\n  return ctx;\n}\n\n/**\n * This plugin enforces a context allowlist for all events\n *\n * This is done to make sure that anything Analytics.js sends to Segment is only the data we want to send\n */\nexport const ContextAllowlistPlugin: Plugin = {\n  name: \"Enforce Context Allowlist\",\n  type: \"enrichment\",\n\n  isLoaded: () => true,\n  load: () => Promise.resolve(),\n\n  track: stripContext,\n  identify: stripContext,\n  page: stripContext,\n  alias: stripContext,\n  group: stripContext,\n  screen: stripContext,\n};\n"]}