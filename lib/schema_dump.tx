-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


ALTER TABLE IF EXISTS public.chat_messages DROP CONSTRAINT IF EXISTS chat_messages_receiver_id_fkey;

ALTER TABLE IF EXISTS public.chat_messages DROP CONSTRAINT IF EXISTS chat_messages_sender_id_fkey;

ALTER TABLE IF EXISTS public.chatroom_members DROP CONSTRAINT IF EXISTS chatroom_members_chatroom_id_fkey;

ALTER TABLE IF EXISTS public.comments DROP CONSTRAINT IF EXISTS comments_game_id_fkey;

ALTER TABLE IF EXISTS public.comments DROP CONSTRAINT IF EXISTS comments_user_id_fkey;

ALTER TABLE IF EXISTS public.esports_records DROP CONSTRAINT IF EXISTS esports_records_user_id_fkey;

ALTER TABLE IF EXISTS public.flagged_scores DROP CONSTRAINT IF EXISTS flagged_scores_game_id_fkey;

ALTER TABLE IF EXISTS public.flagged_scores DROP CONSTRAINT IF EXISTS flagged_scores_user_id_fkey;

ALTER TABLE IF EXISTS public.game_creation_payments DROP CONSTRAINT IF EXISTS game_creation_payments_game_id_fkey;

ALTER TABLE IF EXISTS public.game_metrics DROP CONSTRAINT IF EXISTS game_metrics_game_id_fkey;

ALTER TABLE IF EXISTS public.game_sessions DROP CONSTRAINT IF EXISTS game_sessions_game_id_fkey;

ALTER TABLE IF EXISTS public.game_sessions DROP CONSTRAINT IF EXISTS game_sessions_user_id_fkey;

ALTER TABLE IF EXISTS public.game_test_history DROP CONSTRAINT IF EXISTS game_test_history_game_id_fkey;

ALTER TABLE IF EXISTS public.games DROP CONSTRAINT IF EXISTS games_creator_wallet_fkey;

ALTER TABLE IF EXISTS public.grabbit_players DROP CONSTRAINT IF EXISTS grabbit_players_game_id_fkey;

ALTER TABLE IF EXISTS public.user_deposit_addresses DROP CONSTRAINT IF EXISTS user_deposit_addresses_user_id_fkey;

ALTER TABLE IF EXISTS public.user_testing_games DROP CONSTRAINT IF EXISTS user_testing_games_game_id_fkey;

ALTER TABLE IF EXISTS public.votes DROP CONSTRAINT IF EXISTS votes_game_id_fkey;

ALTER TABLE IF EXISTS public.votes DROP CONSTRAINT IF EXISTS votes_user_id_fkey;



DROP TABLE IF EXISTS public.admin_users;

CREATE TABLE IF NOT EXISTS public.admin_users
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id uuid,
    role text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT admin_users_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.admin_users
    ENABLE ROW LEVEL SECURITY;

DROP TABLE IF EXISTS public.chat_messages;

CREATE TABLE IF NOT EXISTS public.chat_messages
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    sender_id uuid,
    receiver_id uuid,
    chatroom_id uuid,
    content text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    sender_name text COLLATE pg_catalog."default",
    receiver_name text COLLATE pg_catalog."default",
    sender_public_key text COLLATE pg_catalog."default",
    receiver_publi_key text COLLATE pg_catalog."default",
    CONSTRAINT chat_messages_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.chat_rooms;

CREATE TABLE IF NOT EXISTS public.chat_rooms
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    name text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT chat_rooms_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.chatroom_members;

CREATE TABLE IF NOT EXISTS public.chatroom_members
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    chatroom_id uuid,
    user_id uuid,
    joined_at timestamp with time zone DEFAULT now(),
    CONSTRAINT chatroom_members_pkey PRIMARY KEY (id),
    CONSTRAINT chatroom_members_chatroom_id_user_id_key UNIQUE (chatroom_id, user_id)
);

ALTER TABLE IF EXISTS public.chatroom_members
    ENABLE ROW LEVEL SECURITY;

DROP TABLE IF EXISTS public.chatrooms;

CREATE TABLE IF NOT EXISTS public.chatrooms
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    name text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT chatrooms_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.chatrooms
    ENABLE ROW LEVEL SECURITY;

DROP TABLE IF EXISTS public.comments;

CREATE TABLE IF NOT EXISTS public.comments
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    game_id uuid,
    user_id text COLLATE pg_catalog."default",
    content text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT comments_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.esports;

CREATE TABLE IF NOT EXISTS public.esports
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    game text COLLATE pg_catalog."default" NOT NULL,
    console text COLLATE pg_catalog."default" NOT NULL,
    amount double precision NOT NULL,
    rules text COLLATE pg_catalog."default",
    player1 text COLLATE pg_catalog."default" NOT NULL,
    player2 text COLLATE pg_catalog."default",
    player1score integer,
    player2score integer,
    status integer NOT NULL,
    scoredby text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT now(),
    scoredate timestamp with time zone,
    indisupte boolean,
    referee text COLLATE pg_catalog."default",
    txid text COLLATE pg_catalog."default",
    player1_name text COLLATE pg_catalog."default",
    player2_name text COLLATE pg_catalog."default",
    player1_avatar text COLLATE pg_catalog."default",
    player2_avatar text COLLATE pg_catalog."default",
    score_confirmed_at timestamp with time zone,
    cancelled_by text COLLATE pg_catalog."default",
    cancelled_at timestamp with time zone,
    fee double precision,
    CONSTRAINT esports_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.esports_records;

CREATE TABLE IF NOT EXISTS public.esports_records
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id uuid,
    public_key text COLLATE pg_catalog."default" NOT NULL,
    wins integer DEFAULT 0,
    losses integer DEFAULT 0,
    win_streak integer DEFAULT 0,
    loss_streak integer DEFAULT 0,
    game text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT esports_records_pkey PRIMARY KEY (id),
    CONSTRAINT esports_records_user_id_game_key UNIQUE (user_id, game)
);

DROP TABLE IF EXISTS public.flagged_scores;

CREATE TABLE IF NOT EXISTS public.flagged_scores
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    game_id uuid,
    user_id text COLLATE pg_catalog."default",
    score integer,
    play_time integer,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT flagged_scores_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.game_creation_payments;

CREATE TABLE IF NOT EXISTS public.game_creation_payments
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    game_id uuid,
    total_amount numeric(10, 2) NOT NULL,
    admin_amount numeric(10, 2) NOT NULL,
    platform_amount numeric(10, 2) NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT game_creation_payments_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.game_metrics;

CREATE TABLE IF NOT EXISTS public.game_metrics
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    game_id uuid,
    max_possible_score integer,
    average_score_per_minute numeric(10, 2),
    scoring_type text COLLATE pg_catalog."default",
    typical_score_range jsonb,
    score_distribution jsonb,
    CONSTRAINT game_metrics_pkey PRIMARY KEY (id),
    CONSTRAINT game_metrics_game_id_key UNIQUE (game_id)
);

DROP TABLE IF EXISTS public.game_sessions;

CREATE TABLE IF NOT EXISTS public.game_sessions
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    game_id uuid,
    user_id text COLLATE pg_catalog."default",
    start_time timestamp with time zone NOT NULL,
    end_time timestamp with time zone,
    score integer,
    play_time integer,
    CONSTRAINT game_sessions_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.game_test_history;

CREATE TABLE IF NOT EXISTS public.game_test_history
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    game_id uuid,
    tester_id uuid,
    test_result text COLLATE pg_catalog."default" NOT NULL,
    feedback text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT game_test_history_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.games;

CREATE TABLE IF NOT EXISTS public.games
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    creator_wallet text COLLATE pg_catalog."default",
    title text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    thumbnail_image text COLLATE pg_catalog."default",
    play_fee numeric(10, 2) NOT NULL,
    top_payout integer NOT NULL DEFAULT 1,
    category text COLLATE pg_catalog."default" NOT NULL,
    rules text COLLATE pg_catalog."default",
    game_code text COLLATE pg_catalog."default" NOT NULL,
    game_css text COLLATE pg_catalog."default",
    status text COLLATE pg_catalog."default" NOT NULL DEFAULT 'pending_test'::text,
    current_tester_id uuid,
    last_test_date timestamp with time zone,
    test_feedback text COLLATE pg_catalog."default",
    tester_earnings numeric(10, 2) DEFAULT 0,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT games_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.grabbit;

CREATE TABLE IF NOT EXISTS public.grabbit
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    game_id serial NOT NULL,
    title text COLLATE pg_catalog."default" NOT NULL,
    image text COLLATE pg_catalog."default",
    prize_amount numeric(20, 8) NOT NULL,
    prize_token text COLLATE pg_catalog."default",
    details text COLLATE pg_catalog."default",
    created_by text COLLATE pg_catalog."default" NOT NULL,
    create_date timestamp with time zone DEFAULT now(),
    players_max integer NOT NULL,
    players_min integer NOT NULL,
    players_ready integer DEFAULT 0,
    status smallint NOT NULL,
    last_grab timestamp with time zone,
    slapper text COLLATE pg_catalog."default",
    winner text COLLATE pg_catalog."default",
    end_time timestamp with time zone,
    start_time timestamp with time zone,
    free_grabs integer DEFAULT 0,
    free_slaps integer DEFAULT 0,
    free_sneaks integer DEFAULT 0,
    players jsonb,
    entry_fee_token text COLLATE pg_catalog."default",
    entry_fee double precision,
    grabs_to_join smallint,
    winner_name text COLLATE pg_catalog."default",
    winner_avatar text COLLATE pg_catalog."default",
    wallet text COLLATE pg_catalog."default",
    wallet_encryption text COLLATE pg_catalog."default",
    wallet_iv text COLLATE pg_catalog."default",
    prize_token_name text COLLATE pg_catalog."default",
    "timeLeft" smallint,
    CONSTRAINT grabbit_pkey PRIMARY KEY (id),
    CONSTRAINT grabbit_game_id_key UNIQUE (game_id)
);

ALTER TABLE IF EXISTS public.grabbit
    ENABLE ROW LEVEL SECURITY;

DROP TABLE IF EXISTS public.grabbit_players;

CREATE TABLE IF NOT EXISTS public.grabbit_players
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    game_id integer,
    player text COLLATE pg_catalog."default" NOT NULL,
    status text COLLATE pg_catalog."default" NOT NULL,
    grabs integer DEFAULT 0,
    slaps integer DEFAULT 0,
    sneaks integer DEFAULT 0,
    sneak_open boolean DEFAULT false,
    seat_expire timestamp with time zone,
    grabs_used integer DEFAULT 0,
    slaps_used integer DEFAULT 0,
    sneaks_used integer DEFAULT 0,
    player_avatar text COLLATE pg_catalog."default",
    player_name text COLLATE pg_catalog."default",
    CONSTRAINT grabbit_players_pkey PRIMARY KEY (id),
    CONSTRAINT unique_player_per_game UNIQUE (game_id, player)
);

ALTER TABLE IF EXISTS public.grabbit_players
    ENABLE ROW LEVEL SECURITY;

DROP TABLE IF EXISTS public.grabbit_profile;

CREATE TABLE IF NOT EXISTS public.grabbit_profile
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    public_key text COLLATE pg_catalog."default" NOT NULL,
    grabs integer DEFAULT 0,
    slaps integer DEFAULT 0,
    sneaks integer DEFAULT 0,
    games_played integer DEFAULT 0,
    games_won integer DEFAULT 0,
    in_game integer DEFAULT 0,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT grabbit_profile_pkey PRIMARY KEY (id),
    CONSTRAINT grabbit_profile_public_key_key UNIQUE (public_key)
);

ALTER TABLE IF EXISTS public.grabbit_profile
    ENABLE ROW LEVEL SECURITY;

DROP TABLE IF EXISTS public.grabbit_wallet;

CREATE TABLE IF NOT EXISTS public.grabbit_wallet
(
    id serial NOT NULL,
    game_id integer,
    wallet text COLLATE pg_catalog."default",
    wallet_key text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    wallet_iv text COLLATE pg_catalog."default",
    CONSTRAINT grabbit_wallet_pkey PRIMARY KEY (id),
    CONSTRAINT grabbit_wallet_wallet_wallet_key_key UNIQUE (wallet, wallet_key)
);

DROP TABLE IF EXISTS public.platform_settings;

CREATE TABLE IF NOT EXISTS public.platform_settings
(
    id serial NOT NULL,
    platform_wallet_address text COLLATE pg_catalog."default" NOT NULL,
    boost_fee integer NOT NULL DEFAULT 10,
    dev_fee_percentage numeric(5, 2) NOT NULL DEFAULT 0.10,
    platform_fee_percentage numeric(5, 2) NOT NULL DEFAULT 0.05,
    top_player_percentage numeric(5, 2) NOT NULL DEFAULT 0.85,
    initial_super_admin_address text COLLATE pg_catalog."default",
    encrypted_private_key text COLLATE pg_catalog."default" NOT NULL,
    iv text COLLATE pg_catalog."default" NOT NULL,
    is_paused boolean NOT NULL DEFAULT false,
    payment_wallet text COLLATE pg_catalog."default",
    CONSTRAINT platform_settings_pkey PRIMARY KEY (id),
    CONSTRAINT platform_settings_platform_wallet_address_key UNIQUE (platform_wallet_address)
);

DROP TABLE IF EXISTS public.poll_leader;

CREATE TABLE IF NOT EXISTS public.poll_leader
(
    id serial NOT NULL,
    public_key text COLLATE pg_catalog."default" NOT NULL,
    last_active timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT poll_leader_pkey PRIMARY KEY (id),
    CONSTRAINT poll_leader_public_key_key UNIQUE (public_key),
    CONSTRAINT unique_public_key UNIQUE (public_key)
);

DROP TABLE IF EXISTS public.user_deposit_addresses;

CREATE TABLE IF NOT EXISTS public.user_deposit_addresses
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id text COLLATE pg_catalog."default",
    deposit_address text COLLATE pg_catalog."default" NOT NULL,
    encrypted_private_key text COLLATE pg_catalog."default" NOT NULL,
    iv text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT user_deposit_addresses_pkey PRIMARY KEY (id),
    CONSTRAINT user_deposit_addresses_deposit_address_key UNIQUE (deposit_address)
);

DROP TABLE IF EXISTS public.user_testing_games;

CREATE TABLE IF NOT EXISTS public.user_testing_games
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id uuid,
    game_id uuid,
    assigned_at timestamp with time zone DEFAULT now(),
    status text COLLATE pg_catalog."default" NOT NULL DEFAULT 'in_progress'::text,
    CONSTRAINT user_testing_games_pkey PRIMARY KEY (id),
    CONSTRAINT user_testing_games_user_id_game_id_key UNIQUE (user_id, game_id)
);

DROP TABLE IF EXISTS public.users;

CREATE TABLE IF NOT EXISTS public.users
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    deposit_wallet text COLLATE pg_catalog."default",
    username text COLLATE pg_catalog."default",
    avatar_url text COLLATE pg_catalog."default",
    credits integer DEFAULT 0,
    total_earnings numeric(10, 2) DEFAULT 0,
    tester_earnings numeric(10, 2) DEFAULT 0,
    "publicKey" text COLLATE pg_catalog."default",
    "deposit_wallet_encryptedKey" text COLLATE pg_catalog."default",
    iv text COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_wallet_key UNIQUE (deposit_wallet)
);

DROP TABLE IF EXISTS public.votes;

CREATE TABLE IF NOT EXISTS public.votes
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    game_id uuid,
    user_id text COLLATE pg_catalog."default",
    vote_type text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT votes_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.chat_messages
    ADD CONSTRAINT chat_messages_receiver_id_fkey FOREIGN KEY (receiver_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_chat_messages_receiver_id
    ON public.chat_messages(receiver_id);


ALTER TABLE IF EXISTS public.chat_messages
    ADD CONSTRAINT chat_messages_sender_id_fkey FOREIGN KEY (sender_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_chat_messages_sender_id
    ON public.chat_messages(sender_id);


ALTER TABLE IF EXISTS public.chatroom_members
    ADD CONSTRAINT chatroom_members_chatroom_id_fkey FOREIGN KEY (chatroom_id)
    REFERENCES public.chatrooms (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_chatroom_members_chatroom_id
    ON public.chatroom_members(chatroom_id);


ALTER TABLE IF EXISTS public.comments
    ADD CONSTRAINT comments_game_id_fkey FOREIGN KEY (game_id)
    REFERENCES public.games (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.comments
    ADD CONSTRAINT comments_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (deposit_wallet) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.esports_records
    ADD CONSTRAINT esports_records_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.flagged_scores
    ADD CONSTRAINT flagged_scores_game_id_fkey FOREIGN KEY (game_id)
    REFERENCES public.games (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.flagged_scores
    ADD CONSTRAINT flagged_scores_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (deposit_wallet) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.game_creation_payments
    ADD CONSTRAINT game_creation_payments_game_id_fkey FOREIGN KEY (game_id)
    REFERENCES public.games (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.game_metrics
    ADD CONSTRAINT game_metrics_game_id_fkey FOREIGN KEY (game_id)
    REFERENCES public.games (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS game_metrics_game_id_key
    ON public.game_metrics(game_id);


ALTER TABLE IF EXISTS public.game_sessions
    ADD CONSTRAINT game_sessions_game_id_fkey FOREIGN KEY (game_id)
    REFERENCES public.games (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.game_sessions
    ADD CONSTRAINT game_sessions_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (deposit_wallet) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.game_test_history
    ADD CONSTRAINT game_test_history_game_id_fkey FOREIGN KEY (game_id)
    REFERENCES public.games (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.games
    ADD CONSTRAINT games_creator_wallet_fkey FOREIGN KEY (creator_wallet)
    REFERENCES public.users (deposit_wallet) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.grabbit_players
    ADD CONSTRAINT grabbit_players_game_id_fkey FOREIGN KEY (game_id)
    REFERENCES public.grabbit (game_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_grabbit_players_game_id
    ON public.grabbit_players(game_id);


ALTER TABLE IF EXISTS public.user_deposit_addresses
    ADD CONSTRAINT user_deposit_addresses_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (deposit_wallet) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_testing_games
    ADD CONSTRAINT user_testing_games_game_id_fkey FOREIGN KEY (game_id)
    REFERENCES public.games (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.votes
    ADD CONSTRAINT votes_game_id_fkey FOREIGN KEY (game_id)
    REFERENCES public.games (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.votes
    ADD CONSTRAINT votes_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (deposit_wallet) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;